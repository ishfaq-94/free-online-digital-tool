<!DOCTYPE html>
<html lang="en">
<head>
    <title>Image-to-Text Converter - Free OCR Tool | Convert Images Now</title>
    <meta name="description" content="Convert images to text with our free Image-to-Text Converter. Fast, accurate OCR for photos and scans. Try this online tool today!">
    <meta name="keywords" content="image to text, OCR tool, free image converter, text extractor, online OCR">
    <meta name="author" content="xAI Team">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/tesseract.js@4.0.2/dist/tesseract.min.js"></script>
    <style>
        body {
            font-family: 'Montserrat', sans-serif;
            background: linear-gradient(to bottom, #F5F7FA, #FFFFFF);
            margin: 0;
            padding: 20px;
            text-align: center;
        }

        h1 {
            font-size: 48px;
            margin: 10px 0;
            color: #6200ea;
        }

        p {
            font-size: 20px;
            color: #666;
        }

        .cta-button {
            background: #6200ea;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 25px;
            font-size: 18px;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .cta-button:hover {
            transform: scale(1.05);
        }

        #demo-animation {
            width: 400px;
            height: 300px;
            background: #E0E0E0;
            margin: 20px auto;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        #upload-zone {
            width: 500px;
            height: 200px;
            margin: 20px auto;
            border: 2px dashed #CCCCCC;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: border-color 0.3s;
        }

        #upload-zone.dragover {
            border-color: #6200ea;
        }

        .browse {
            color: #6200ea;
            text-decoration: underline;
        }

        #file-input {
            display: none;
        }

        #preview {
            max-width: 150px;
            margin: 10px auto;
            display: none;
        }

        #feedback {
            color: #00CC00;
            display: none;
        }

        #loading {
            display: none;
            margin: 20px auto;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #6200ea;
            border-top: 5px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        #ad {
            width: 468px;
            height: 60px;
            background: #F0F0F0;
            margin: 10px auto;
            display: none;
            line-height: 60px;
        }

        #output {
            width: 600px;
            height: 300px;
            margin: 20px auto;
            border: 1px solid #E0E0E0;
            padding: 10px;
            resize: none;
            display: none;
        }

        .button-group {
            margin: 10px 0;
        }

        .button {
            background: #6200ea;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            margin: 0 5px;
            transition: background 0.2s;
        }

        .button:hover {
            background: #3700b3;
        }

        .button:disabled {
            background: #CCCCCC;
            cursor: not-allowed;
        }

        @media (max-width: 768px) {
            h1 { font-size: 32px; }
            p { font-size: 16px; }
            #upload-zone { width: 100%; height: 150px; }
            #demo-animation { width: 100%; }
            #output { width: 100%; }
            #ad { width: 320px; height: 50px; line-height: 50px; }
        }
    </style>
</head>
<body>
    <h1>Convert Images to Text - Free & Easy, Unlimited Usage!</h1>
    <p>No limits, no catchâ€”just fast, accurate text extraction.</p>
    <button class="cta-button">Start Converting Now</button>
    <div id="demo-animation">Sample Demo Animation</div>

    <div id="upload-zone">
        Drag & Drop Here or <span class="browse">Browse Files</span>
        <input type="file" id="file-input" accept="image/*">
    </div>
    <p id="feedback">Image uploaded successfully!</p>
    <img id="preview" alt="Preview">
    <div id="loading">
        <div class="spinner"></div>
        <p>Processing your image...</p>
    </div>
    <div id="ad">Ad: Try [Product] for productivity!</div>
    <textarea id="output" placeholder="Extracted text will appear here..."></textarea>
    <div class="button-group">
        <button class="button" id="copy-btn" disabled>Copy</button>
        <button class="button" id="download-btn" disabled>Download TXT</button>
        <button class="button" id="reprocess-btn" disabled>Reprocess Image</button>
    </div>

    <script>
        const uploadZone = document.getElementById('upload-zone');
        const fileInput = document.getElementById('file-input');
        const preview = document.getElementById('preview');
        const feedback = document.getElementById('feedback');
        const loading = document.getElementById('loading');
        const ad = document.getElementById('ad');
        const output = document.getElementById('output');
        const copyBtn = document.getElementById('copy-btn');
        const downloadBtn = document.getElementById('download-btn');
        const reprocessBtn = document.getElementById('reprocess-btn');

        let currentFile = null;

        uploadZone.addEventListener('click', () => fileInput.click());
        uploadZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadZone.classList.add('dragover');
        });
        uploadZone.addEventListener('dragleave', () => uploadZone.classList.remove('dragover'));
        uploadZone.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadZone.classList.remove('dragover');
            handleFile(e.dataTransfer.files[0]);
        });
        fileInput.addEventListener('change', (e) => handleFile(e.target.files[0]));

        function handleFile(file) {
            if (!file || !file.type.startsWith('image/')) {
                alert('Please upload a valid image file.');
                return;
            }
            currentFile = file;
            const reader = new FileReader();
            reader.onload = (e) => {
                preview.src = e.target.result;
                preview.style.display = 'block';
                feedback.style.display = 'block';
                processImage(file);
            };
            reader.readAsDataURL(file);
        }

        async function processImage(file) {
            loading.style.display = 'block';
            ad.style.display = 'block';
            output.style.display = 'none';
            copyBtn.disabled = true;
            downloadBtn.disabled = true;
            reprocessBtn.disabled = true;

            const { data: { text } } = await Tesseract.recognize(file, 'eng', {
                logger: (m) => console.log(m)
            });

            loading.style.display = 'none';
            ad.style.display = 'none';
            output.value = text;
            output.style.display = 'block';
            copyBtn.disabled = false;
            downloadBtn.disabled = false;
            reprocessBtn.disabled = false;
        }

        copyBtn.addEventListener('click', () => {
            output.select();
            document.execCommand('copy');
            copyBtn.textContent = 'Copied!';
            setTimeout(() => copyBtn.textContent = 'Copy', 2000);
        });

        downloadBtn.addEventListener('click', () => {
            const blob = new Blob([output.value], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'extracted-text.txt';
            a.click();
            URL.revokeObjectURL(url);
        });

        reprocessBtn.addEventListener('click', () => {
            if (currentFile) processImage(currentFile);
        });
    </script>
</body>
</html>
